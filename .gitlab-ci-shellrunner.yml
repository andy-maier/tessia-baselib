variables:
  IMAGE_NAME: tessia-baselib:${CI_COMMIT_REF_SLUG}

stages:
  - build
  - lint
  - unittest
  - cleanup

build:
  stage: build
  script:
    - git bundle create tools/ci/docker/assets/tessia-baselib.git HEAD
    - docker build --pull --force-rm -f tools/ci/docker/Dockerfile -t $IMAGE_NAME tools/ci/docker
    # make sure the library was properly installed and can be imported
    - docker run --env TESSIA_BASELIB_INTERACTIVE=no --rm $IMAGE_NAME

lint:
  stage: lint
  script:
    - docker run -t --rm --entrypoint /assets/tessia-baselib/tools/run_pylint.py $IMAGE_NAME

unittest:
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  stage: unittest
  script:
    - docker run -t --rm --entrypoint /assets/tessia-baselib/tools/run_tests.py $IMAGE_NAME

# do housekeeping
cleanup:
  stage: cleanup
  script:
    - docker rm -v $(docker ps -a -q -f "ancestor=${IMAGE_NAME}") || true
    - docker rmi $(docker images -a -q -f "dangling=true") || true
    # use --no-prune to keep the cache for subsequent builds
    - docker rmi --no-prune $IMAGE_NAME
  when: always
